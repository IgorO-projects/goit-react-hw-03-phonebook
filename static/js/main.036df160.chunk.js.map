{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","container","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","onSubmit","preventDefault","handlePhoneAdd","props","this","input","type","pattern","title","placeholder","required","onChange","button","Component","Filter","filter","onChangeFilter","ContactList","renderedContacts","deletedContactbyId","list","map","contact","list__item","list__text","list__button","onClick","id","App","contacts","nameCheked","find","uuidv4","alert","prevState","filteredContacts","normalizedFilter","toLowerCase","includes","savedContacts","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.036df160.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"list__item\":\"ContactList_list__item__2uVIv\",\"list__text\":\"ContactList_list__text__1taay\",\"list__button\":\"ContactList_list__button__2Ij86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","import styles from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n        <div className={styles.container}>\n            {children}\n        </div>\n    );\n};\n\nexport default Container;","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  }\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { handlePhoneAdd } = this.props;\n    const contact = { name, number };\n\n    handlePhoneAdd(contact)\n  }\n  \n  render() {\n\n    return (\n      <form onSubmit={this.onSubmit} >\n        <label>\n          <br/>\n          <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Name\"\n          required\n          value={this.state.name}\n          onChange={this.handleChange}\n          />\n        </label>\n        <br/>\n        <label>\n          <br/>\n          <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"Number\"\n          required\n          value={this.state.number}\n          onChange={this.handleChange}\n          />\n        </label>\n        <br/>\n        <button\n        className={styles.button}\n        type=\"submit\"\n        >Add contact</button>\n      </form>\n  );\n  }\n};\n\nContactForm.propTypes = {\n    handlePhoneAdd: PropTypes.func.isRequired,\n}\n\nexport default ContactForm;","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\n\nconst Filter = ({ filter, onChangeFilter }) => {\n    return (\n        <form>\n          <label>\n            <input\n            className={styles.input}\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={onChangeFilter}\n            placeholder=\"Find person\"\n            />\n          </label>\n        </form>\n    )\n}\n\nFilter.propTypes = { \n    filter: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n}\n\nexport default Filter; ","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ renderedContacts, deletedContactbyId }) => {\n    return (\n        <ul className={styles.list}>\n          {renderedContacts.map(contact => {\n            return (\n              <li \n              className={styles.list__item}\n              key={contact.id}>\n                <span\n                className={styles.list__text}\n                >{contact.name}: {contact.number}</span>\n                <button\n                className={styles.list__button}\n                type=\"button\"\n                onClick={()=> {deletedContactbyId(contact.id)}}\n                >delete</button>\n              </li>\n            )\n          })}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    renderedContacts: PropTypes.array.isRequired,\n};\n\nexport default ContactList;","import { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }\n\n  componentDidMount() {\n\n    const savedContacts = localStorage.getItem('savedContacts');\n    const parsedContacts = JSON.parse(savedContacts);\n    \n    if(parsedContacts) {\n      this.setState({ contacts: [...parsedContacts] })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if(prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('savedContacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  nameCheked = ( contacts, name ) => {\n    return contacts.find(contact => name === contact.name);\n  }\n\n  handlePhoneAdd = contact => {\n    const { contacts } = this.state;\n    const { name, number } = contact;\n    \n    const id = uuidv4();\n    const doublCheckedName = this.nameCheked(contacts, name);\n\n    if(doublCheckedName) {\n      alert(`${name} is already in Phonebook`)\n      return;\n    }\n\n    this.setState( prevState => ({\n      contacts: [...prevState.contacts, { id: id, name: name, number: number }]}\n    ));\n  };\n\n  onChangeFilter = event => {\n     this.setState({ filter: event.currentTarget.value});\n  }\n\n  filteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    \n    if(filter) {\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    }\n    return contacts;\n  }\n\n  deletedContactbyId = (id) => {\n    this.setState(prevState=> ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\n    }))\n  }\n\n  render () {\n    const { filter } = this.state;\n    const renderedContacts = this.filteredContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm \n        handlePhoneAdd={this.handlePhoneAdd}\n        />\n        <h2>Contacts</h2>\n        <Filter \n        filter={filter}\n        onChangeFilter={this.onChangeFilter}\n        />\n        <ContactList \n        renderedContacts={renderedContacts}\n        deletedContactbyId={this.deletedContactbyId}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}